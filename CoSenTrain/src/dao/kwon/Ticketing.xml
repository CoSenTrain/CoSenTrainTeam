<?xml version="1.0" encoding="EUC-KR"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="bean.kwon.TktingSchedule">
	<select id="selectSchedule" parameterType="java.util.Map" resultType="sch">
SELECT RM, runningNo, trainNo, trainType, srcName, destName, departureTime, arrivalTime
FROM (
  SELECT ROW_NUMBER() OVER(ORDER BY departureTime) RM, runningNo, tr.trainNo, tr.type trainType, srcName, destName, TO_CHAR(departureTime, 'YYYY/MM/DD HH24:MI:SS') AS departureTime, TO_CHAR(arrivalTime, 'YYYY/MM/DD HH24:MI:SS') AS arrivalTime
  FROM runningSchedule ss, (SELECT r.routeNo, s.srcName, d.destName
                        FROM route r, (SELECT stationNo src, name srcName FROM station) s, (SELECT stationNo dest, name destName FROM station) d
                        WHERE r.src = s.src AND r.dest = d.dest) rr, (SELECT trainNo, type, moddate FROM train) tr
 WHERE ss.routeNo = rr.routeNo AND ss.trainNo = tr.trainNo 
    AND TO_NUMBER(TO_CHAR(ss.departureTime, 'HH24'), '99')  >= TO_NUMBER(#{hh}, '99')
    AND rr.srcName = #{src} AND rr.destName = #{dest}
    AND TO_CHAR(ss.departureTime, 'YYYY.MM.DD') = #{chosenDate}
    <choose>
    	<when test="carType != null and carType.equalsIgnoreCase('regular')">
    		 AND (SELECT COUNT(*) FROM car WHERE trainNo IN(tr.trainNo) AND TYPE = 'regular') > 0 
    	</when>
    	<when test="carType != null and carType.equalsIgnoreCase('advanced')">
    		 AND (SELECT COUNT(*) FROM car WHERE trainNo IN(tr.trainNo) AND TYPE = 'advanced') > 0 
    	</when>
    	<when test="isAisleSeat != null and isAisleSeat.equalsIgnoreCase('windowSeat')">
    		 AND (SELECT COUNT(*) FROM seat  WHERE carNo IN(SELECT carNo FROM car WHERE trainNo IN(tr.trainNo)) AND seatName NOT LIKE '%B%') > 0 
    	</when>
    	<when test="isAisleSeat != null and isAisleSeat.equalsIgnoreCase('aisleSeat')">
    		 AND (SELECT COUNT(*) FROM seat  WHERE carNo IN(SELECT carNo FROM car WHERE trainNo IN(tr.trainNo)) AND seatName LIKE '%B%') > 0 
    	</when>
    </choose>
) 
WHERE RM BETWEEN 1 AND 10
	</select>
	<select id="selectStationsOrdered" parameterType="java.util.Map" resultType="java.lang.String">
SELECT name FROM STATION ORDER BY stationNo ${order}
	</select>
	<select id="getTSchedule" parameterType="java.util.Map" resultType="sch">
SELECT runningNo, tr.trainNo, tr.type trainType, srcName, destName, TO_CHAR(departureTime, 'YYYY/MM/DD HH24:MI:SS') AS departureTime, TO_CHAR(arrivalTime, 'YYYY/MM/DD HH24:MI:SS') AS arrivalTime 
FROM runningSchedule ss, (SELECT r.routeNo, s.srcName, d.destName
                        FROM route r, (SELECT stationNo src, name srcName FROM station) s, (SELECT stationNo dest, name destName FROM station) d
                        WHERE r.src = s.src AND r.dest = d.dest) rr, (SELECT trainNo, type, moddate FROM train) tr
WHERE ss.routeNo = rr.routeNo AND ss.trainNo = tr.trainNo 
  AND tr.trainNo = #{trainNo}
  AND tr.type = #{trainType}
  AND TO_CHAR(departureTime, 'YYYY/MM/DD') = #{yyyymmdd}
ORDER BY TO_DATE(departureTime, 'YYYY/MM/DD HH24:MI:SS') ASC
	</select>
	<select id="getRountFare" parameterType="java.util.Map" resultType="java.lang.Integer">
SELECT fare
FROM route r, (SELECT stationNo src FROM station WHERE name = #{srcName}) s, (SELECT stationNo dest FROM station WHERE name = #{destName}) d
WHERE r.src = s.src AND r.dest = d.dest
	</select>
	<select id="getBookingList" resultType="bookingInfo">
SELECT t.runningNo, s.seatNo
FROM ticket t, payment p, seat s
WHERE t.paymentNo = p.paymentNo AND t.seatNo = s.seatNo
AND p.regdate >= SYSDATE - 1
	</select>
	<select id="getTicketNoNextval" resultType="java.lang.Integer">
		SELECT ticket_seq.NEXTVAL FROM DUAL
	</select>
	<insert id="doTicket" parameterType="ticket">
INSERT INTO ticket(ticketNo, seatNo, userNo, runningNo, paymentNo, discountNo) 
VALUES(#{ticketNo}, #{seatNo}, #{userNo}, #{runningNo}, #{paymentNo}, #{discountNo})
	</insert>
</mapper>

<!-- 
SELECT RM, runningNo, trainNo, trainType, srcName, destName, departureTime, arrivalTime, ROUND(24 * (to_date(arrivalTime, 'HH24:MI') - to_date(departureTime, 'HH24:MI')), 2) diffHours
FROM (
  SELECT ROW_NUMBER() OVER(ORDER BY departureTime) RM, runningNo, tr.trainNo, tr.type trainType, srcName, destName, TO_CHAR(departureTime, 'HH24:MI') AS departureTime, TO_CHAR(arrivalTime, 'HH24:MI') AS arrivalTime 
  FROM runningSchedule ss, (SELECT r.routeNo, s.srcName, d.destName
                        FROM route r, (SELECT stationNo src, name srcName FROM station) s, (SELECT stationNo dest, name destName FROM station) d
                        WHERE r.src = s.src AND r.dest = d.dest) rr, (SELECT trainNo, type, moddate FROM train) tr
 WHERE ss.routeNo = rr.routeNo AND ss.trainNo = tr.trainNo 
    AND TO_NUMBER(TO_CHAR(ss.departureTime, 'HH24'), '99')  >= TO_NUMBER('07', '99')
    AND rr.srcName = '수서' AND rr.destName = '부산'
    AND (SELECT COUNT(*) FROM car WHERE trainNo IN(tr.trainNo) AND TYPE = 'regular') > 0
    AND (SELECT COUNT(*) FROM seat  WHERE carNo IN(SELECT carNo FROM car WHERE trainNo IN(tr.trainNo)) AND seatName NOT LIKE '%B%') > 0
) 
WHERE RM BETWEEN 1 AND 10;


SELECT RM, runningNo, trainNo, trainType, srcName, destName, departureTime, arrivalTime, ROUND(24 * (to_date(arrivalTime, 'HH24:MI') - to_date(departureTime, 'HH24:MI')), 2) diffHours
FROM (
  SELECT ROW_NUMBER() OVER(ORDER BY departureTime) RM, runningNo, tr.trainNo, tr.type trainType, srcName, destName, TO_CHAR(departureTime, 'HH24:MI') AS departureTime, TO_CHAR(arrivalTime, 'HH24:MI') AS arrivalTime 
  FROM runningSchedule ss, (SELECT r.routeNo, s.srcName, d.destName
                        FROM route r, (SELECT stationNo src, name srcName FROM station) s, (SELECT stationNo dest, name destName FROM station) d
                        WHERE r.src = s.src AND r.dest = d.dest) rr, (SELECT trainNo, type, moddate FROM train) tr
 WHERE ss.routeNo = rr.routeNo AND ss.trainNo = tr.trainNo 
    AND TO_NUMBER(TO_CHAR(ss.departureTime, 'HH24'), '99')  >= TO_NUMBER(#hh#, '99')
    AND rr.srcName = #src# AND rr.destName = #dest#
    <dynamic>
    	<isEqual property="carType" compareValue="regular">AND (SELECT COUNT(*) FROM car WHERE trainNo IN(tr.trainNo) AND TYPE = 'regular') > 0</isEqual>
    	<isEqual property="carType" compareValue="advanced">AND (SELECT COUNT(*) FROM car WHERE trainNo IN(tr.trainNo) AND TYPE = 'advanced') > 0</isEqual>
    	<isEqual property="isAisleSeat" compareValue="windowSeat">AND (SELECT COUNT(*) FROM seat  WHERE carNo IN(SELECT carNo FROM car WHERE trainNo IN(tr.trainNo)) AND seatName NOT LIKE '%B%') > 0</isEqual>
    	<isEqual property="isAisleSeat" compareValue="aisleSeat">AND (SELECT COUNT(*) FROM seat  WHERE carNo IN(SELECT carNo FROM car WHERE trainNo IN(tr.trainNo)) AND seatName LIKE '%B%') > 0</isEqual>
    </dynamic>
) 
WHERE RM BETWEEN 1 AND 10
 -->